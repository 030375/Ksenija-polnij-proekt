import React, { useState } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity, TextInput, Alert, Linking, ImageBackground } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { Calendar, Clock, User, Phone, MessageSquare, CircleCheck as CheckCircle } from 'lucide-react-native';

export default function BookingScreen() {
  const [selectedService, setSelectedService] = useState('');
  const [preferredDate, setPreferredDate] = useState('');
  const [preferredTime, setPreferredTime] = useState('');
  const [alternativeDate, setAlternativeDate] = useState('');
  const [alternativeTime, setAlternativeTime] = useState('');
  const [name, setName] = useState('');
  const [phone, setPhone] = useState('');
  const [message, setMessage] = useState('');

  const services = [
    { id: 'couple', name: '–ü–∞—Ä–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', price: '65 ‚Ç¨', duration: '90 –º–∏–Ω' },
    { id: 'individual', name: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', price: '40 ‚Ç¨', duration: '60 –º–∏–Ω' },
  ];

  const handleSubmit = () => {
    if (!selectedService || !preferredDate || !preferredTime || !name || !phone) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return;
    }

    const service = services.find(s => s.id === selectedService);

    const whatsappMessage = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:

–£—Å–ª—É–≥–∞: ${service?.name}
–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è –¥–∞—Ç–∞: ${preferredDate}
–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: ${preferredTime}
${alternativeDate && alternativeTime ? `–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –¥–∞—Ç–∞: ${alternativeDate}
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è: ${alternativeTime}` : ''}
–ò–º—è: ${name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
${message ? `–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ${message}` : ''}`;

    const encodedMessage = encodeURIComponent(whatsappMessage);
    Linking.openURL(`https://wa.me/37126037277?text=${encodedMessage}`);
  };

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
        {/* Header with Nature Background */}
        <ImageBackground
          source={{ uri: 'https://images.pexels.com/photos/1366919/pexels-photo-1366919.jpeg?auto=compress&cs=tinysrgb&w=800' }}
          style={styles.header}
          imageStyle={styles.headerBackgroundImage}
        >
          <View style={styles.headerOverlay}>
            <Text style={styles.headerTitle}>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</Text>
            <Text style={styles.headerSubtitle}>–£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–µ –¥–ª—è –≤–∞—Å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è</Text>
          </View>
        </ImageBackground>

        {/* Service Selection */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>1. –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É</Text>
          <View style={styles.servicesList}>
            {services.map((service) => (
              <TouchableOpacity
                key={service.id}
                style={[
                  styles.serviceOption,
                  selectedService === service.id && styles.serviceOptionSelected
                ]}
                onPress={() => setSelectedService(service.id)}
              >
                <View style={styles.serviceOptionContent}>
                  <Text style={[
                    styles.serviceOptionName,
                    selectedService === service.id && styles.serviceOptionNameSelected
                  ]}>
                    {service.name}
                  </Text>
                  <View style={styles.serviceOptionDetails}>
                    <Text style={[
                      styles.serviceOptionPrice,
                      selectedService === service.id && styles.serviceOptionPriceSelected
                    ]}>
                      {service.price}
                    </Text>
                    <Text style={[
                      styles.serviceOptionDuration,
                      selectedService === service.id && styles.serviceOptionDurationSelected
                    ]}>
                      {service.duration}
                    </Text>
                  </View>
                </View>
                {selectedService === service.id && (
                  <CheckCircle size={20} color="#ffffff" />
                )}
              </TouchableOpacity>
            ))}
          </View>
        </View>

        {/* Date and Time Selection */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>2. –£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è</Text>
          
          <View style={styles.dateTimeSection}>
            <Text style={styles.dateTimeLabel}>–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è *</Text>
            
            <View style={styles.dateTimeRow}>
              <View style={styles.dateTimeInput}>
                <View style={styles.inputWrapper}>
                  <Calendar size={20} color="#64748b" />
                  <TextInput
                    style={styles.textInput}
                    placeholder="–¥–¥.–º–º.–≥–≥–≥–≥"
                    value={preferredDate}
                    onChangeText={setPreferredDate}
                    placeholderTextColor="#94a3b8"
                  />
                </View>
                <Text style={styles.inputHint}>–ù–∞–ø—Ä–∏–º–µ—Ä: 15.01.2024</Text>
              </View>
              
              <View style={styles.dateTimeInput}>
                <View style={styles.inputWrapper}>
                  <Clock size={20} color="#64748b" />
                  <TextInput
                    style={styles.textInput}
                    placeholder="—á—á:–º–º"
                    value={preferredTime}
                    onChangeText={setPreferredTime}
                    placeholderTextColor="#94a3b8"
                  />
                </View>
                <Text style={styles.inputHint}>–ù–∞–ø—Ä–∏–º–µ—Ä: 14:30</Text>
              </View>
            </View>
          </View>

          <View style={styles.dateTimeSection}>
            <Text style={styles.dateTimeLabel}>–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Text>
            
            <View style={styles.dateTimeRow}>
              <View style={styles.dateTimeInput}>
                <View style={styles.inputWrapper}>
                  <Calendar size={20} color="#64748b" />
                  <TextInput
                    style={styles.textInput}
                    placeholder="–¥–¥.–º–º.–≥–≥–≥–≥"
                    value={alternativeDate}
                    onChangeText={setAlternativeDate}
                    placeholderTextColor="#94a3b8"
                  />
                </View>
                <Text style={styles.inputHint}>–ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–æ</Text>
              </View>
              
              <View style={styles.dateTimeInput}>
                <View style={styles.inputWrapper}>
                  <Clock size={20} color="#64748b" />
                  <TextInput
                    style={styles.textInput}
                    placeholder="—á—á:–º–º"
                    value={alternativeTime}
                    onChangeText={setAlternativeTime}
                    placeholderTextColor="#94a3b8"
                  />
                </View>
                <Text style={styles.inputHint}>–ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏</Text>
              </View>
            </View>
          </View>

          <View style={styles.scheduleInfo}>
            <Text style={styles.scheduleInfoTitle}>üìÖ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:</Text>
            <Text style={styles.scheduleInfoText}>
              ‚Ä¢ –ü–Ω-–ü—Ç: 10:00 - 20:00{'\n'}
              ‚Ä¢ –°—É–±- –í–æ—Å–∫—Ä: 12:00 - 18:00{'\n'}
            </Text>
          </View>
        </View>

        {/* Contact Information */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>3. –í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</Text>
          
          <View style={styles.inputGroup}>
            <Text style={styles.inputLabel}>–ò–º—è *</Text>
            <View style={styles.inputWrapper}>
              <User size={20} color="#64748b" />
              <TextInput
                style={styles.textInput}
                placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
                value={name}
                onChangeText={setName}
                placeholderTextColor="#94a3b8"
              />
            </View>
          </View>

          <View style={styles.inputGroup}>
            <Text style={styles.inputLabel}>–¢–µ–ª–µ—Ñ–æ–Ω *</Text>
            <View style={styles.inputWrapper}>
              <Phone size={20} color="#64748b" />
              <TextInput
                style={styles.textInput}
                placeholder="+371 ________"
                value={phone}
                onChangeText={setPhone}
                keyboardType="phone-pad"
                placeholderTextColor="#94a3b8"
              />
            </View>
          </View>

          <View style={styles.inputGroup}>
            <Text style={styles.inputLabel}>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Text>
            <View style={styles.inputWrapper}>
              <MessageSquare size={20} color="#64748b" />
              <TextInput
                style={[styles.textInput, styles.textInputMultiline]}
                placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –∏–ª–∏ –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏"
                value={message}
                onChangeText={setMessage}
                multiline
                numberOfLines={3}
                placeholderTextColor="#94a3b8"
              />
            </View>
          </View>
        </View>

        {/* Important Notes */}
        <View style={styles.notesSection}>
          <Text style={styles.notesTitle}>‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Text>
          <View style={styles.notesList}>
            <Text style={styles.noteItem}>‚Ä¢ –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏</Text>
            <Text style={styles.noteItem}>‚Ä¢ –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–æ, –ø—Ä–µ–¥–ª–æ–∂—É –±–ª–∏–∂–∞–π—à–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã</Text>
            <Text style={styles.noteItem}>‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –æ—á–Ω–æ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –∏–ª–∏ –æ–Ω–ª–∞–π–Ω</Text>
            <Text style={styles.noteItem}>‚Ä¢ –û—Ç–º–µ–Ω–∞ –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å –≤–æ–∑–º–æ–∂–Ω—ã –∑–∞ 24 —á–∞—Å–∞ –¥–æ –≤—Å—Ç—Ä–µ—á–∏</Text>
          </View>
        </View>

        {/* Submit Button */}
        <View style={styles.submitSection}>
          <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>
            <Text style={styles.submitButtonText}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –≤ WhatsApp</Text>
          </TouchableOpacity>
          
          <Text style={styles.submitNote}>
            –ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ WhatsApp –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏
          </Text>
        </View>

        <View style={styles.bottomPadding} />
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f0f9ff',
  },
  scrollView: {
    flex: 1,
  },
  header: {
    minHeight: 200,
    justifyContent: 'center',
  },
  headerBackgroundImage: {
    opacity: 0.3,
  },
  headerOverlay: {
    backgroundColor: 'rgba(30, 58, 138, 0.85)',
    paddingHorizontal: 20,
    paddingVertical: 30,
    alignItems: 'center',
  },
  headerTitle: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#ffffff',
    marginBottom: 8,
    textAlign: 'center',
  },
  headerSubtitle: {
    fontSize: 16,
    color: '#cbd5e1',
    textAlign: 'center',
  },
  section: {
    paddingHorizontal: 20,
    paddingVertical: 24,
    backgroundColor: 'rgba(255, 255, 255, 0.95)',
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#1e293b',
    marginBottom: 16,
  },
  servicesList: {
    gap: 12,
  },
  serviceOption: {
    backgroundColor: 'rgba(255, 255, 255, 0.95)',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: 16,
    borderRadius: 12,
    borderWidth: 2,
    borderColor: '#e2e8f0',
    shadowColor: '#000000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 8,
    elevation: 2,
  },
  serviceOptionSelected: {
    backgroundColor: '#f97316',
    borderColor: '#f97316',
  },
  serviceOptionContent: {
    flex: 1,
  },
  serviceOptionName: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1e293b',
    marginBottom: 4,
  },
  serviceOptionNameSelected: {
    color: '#ffffff',
  },
  serviceOptionDetails: {
    flexDirection: 'row',
    gap: 12,
  },
  serviceOptionPrice: {
    fontSize: 14,
    fontWeight: '600',
    color: '#f97316',
  },
  serviceOptionPriceSelected: {
    color: '#fed7aa',
  },
  serviceOptionDuration: {
    fontSize: 14,
    color: '#64748b',
  },
  serviceOptionDurationSelected: {
    color: '#fed7aa',
  },
  dateTimeSection: {
    marginBottom: 24,
  },
  dateTimeLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1e293b',
    marginBottom: 12,
  },
  dateTimeRow: {
    flexDirection: 'row',
    gap: 12,
  },
  dateTimeInput: {
    flex: 1,
  },
  inputWrapper: {
    backgroundColor: 'rgba(255, 255, 255, 0.95)',
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderRadius: 8,
    borderWidth: 1,
    borderColor: '#e2e8f0',
    gap: 12,
    shadowColor: '#000000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
    marginBottom: 6,
  },
  textInput: {
    flex: 1,
    fontSize: 16,
    color: '#1e293b',
  },
  inputHint: {
    fontSize: 12,
    color: '#64748b',
    fontStyle: 'italic',
    paddingHorizontal: 4,
  },
  scheduleInfo: {
    backgroundColor: '#f8fafc',
    padding: 16,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: '#e2e8f0',
  },
  scheduleInfoTitle: {
    fontSize: 14,
    fontWeight: '600',
    color: '#1e293b',
    marginBottom: 8,
  },
  scheduleInfoText: {
    fontSize: 14,
    color: '#64748b',
    lineHeight: 20,
  },
  inputGroup: {
    marginBottom: 20,
  },
  inputLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1e293b',
    marginBottom: 8,
  },
  textInputMultiline: {
    minHeight: 80,
    textAlignVertical: 'top',
  },
  notesSection: {
    paddingHorizontal: 20,
    paddingVertical: 24,
    backgroundColor: 'rgba(255, 255, 255, 0.95)',
  },
  notesTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#1e293b',
    marginBottom: 16,
  },
  notesList: {
    gap: 8,
  },
  noteItem: {
    fontSize: 14,
    color: '#64748b',
    lineHeight: 20,
  },
  submitSection: {
    paddingHorizontal: 20,
    paddingVertical: 24,
    backgroundColor: 'rgba(255, 255, 255, 0.95)',
  },
  submitButton: {
    backgroundColor: '#10b981',
    paddingVertical: 16,
    borderRadius: 12,
    alignItems: 'center',
    marginBottom: 12,
    shadowColor: '#10b981',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 6,
  },
  submitButtonText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#ffffff',
  },
  submitNote: {
    fontSize: 14,
    color: '#64748b',
    textAlign: 'center',
    lineHeight: 20,
  },
  bottomPadding: {
    height: 20,
  },
});